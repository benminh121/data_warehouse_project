version: 2

models:
  - name: fact_purchase_orders_line
    tests:
      - dbt_utils.equal_rowcount:
          compare_model: "`vit-lam-data.wide_world_importers.purchasing__purchase_order_lines`"

    columns:
      - name: purchase_order_line_key
        tests:
          - not_null
          - unique

      - name: purchase_order_key
        tests:
          - not_null
          - relationships:
              to: ref('stg_fact_purchase_order')
              field: purchase_order_key
        
      - name: is_order_finalized
        tests:
          - not_null
          - accepted_values:
              values: [Finalized Order, Not Finalized Order, Undefined]

      - name: is_order_line_finalized
        tests:
          - not_null
          - accepted_values:
              values: [Finalized Order Line, Not Finalized Order Line, Undefined]

      - name: product_key
        tests:
          - not_null
          - relationships:
              to: ref('dim_product')
              field: product_key

      - name: package_type_key
        tests: 
          - not_null
          - relationships:
              to: ref('dim_package_type')
              field: package_type_key

      - name: delivery_method_key
        tests: 
          - not_null
          - relationships:
              to: ref('dim_delivery_method')
              field: delivery_method_key

      - name: supplier_key
        tests: 
          - not_null
          - relationships:
              to: ref('dim_supplier')
              field: supplier_key

      - name: contact_person_key
        tests: 
          - not_null
          - relationships:
              to: ref('dim_person_contact')
              field: contact_person_key

      - name: ordered_outers
        tests:
          - custom_test_equal_sum:
              compare_model: "`vit-lam-data.wide_world_importers.purchasing__purchase_order_lines`"
              compare_column: "ordered_outers"

      - name: received_outers
        tests:
          - custom_test_equal_sum:
              compare_model: "`vit-lam-data.wide_world_importers.purchasing__purchase_order_lines`"
              compare_column: "received_outers"

      - name: remaining_outers
        tests:
          - dbt_utils.expression_is_true:
              expression: "= ordered_outers - received_outers"

      - name: expected_unit_price_per_outer
        tests:
          - custom_test_equal_sum:
              compare_model: "`vit-lam-data.wide_world_importers.purchasing__purchase_order_lines`"
              compare_column: "expected_unit_price_per_outer"

